name: CI

on:
  push:
    branches: [v2]
  pull_request:
    branches: [v2]

jobs:
  nodejs:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: keepitsecret
          POSTGRES_USER: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: textbook/take-action@nodejs
        with:
          node-version: 20
      - uses: textbook/take-action@playwright
      - run: npm run lint
      - run: npm run test:cover
        env:
          DATABASE_URL: postgres://testdb:keepitsecret@localhost:5432/testdb
          FORCE_COLOR: true
      - run: npm run e2e
      - run: npm run e2e:dev
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: textbook/take-action@nodejs
        with:
          node-version: 20
      - uses: textbook/take-action@playwright
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          tags: textbook/starter-kit:v2
      - id: docker-run
        run: |
          echo "id=$(docker run \
            --detach \
            --env LOG_LEVEL=debug \
            --env NODE_ENV=docker \
            --init \
            --publish 4321:80 \
            textbook/starter-kit:v2)" >> $GITHUB_OUTPUT
      - run: npm run e2e
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:4321
      - if: always() && steps.docker-run.outputs.id
        run: docker logs ${{ steps.docker-run.outputs.id }}
